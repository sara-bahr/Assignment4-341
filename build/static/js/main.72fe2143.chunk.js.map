{"version":3,"sources":["components/AppHeader.js","components/cityResponse.js","components/City.js","containers/AppContainer.js","App.js","index.js"],"names":["AppHeader","className","CityResponse","props","responseData","cod","setTimeout","clearResponse","message","class","name","main","temp","pressure","humidity","temp_min","temp_max","weather","description","City","useState","validationError","setValidationError","jsx","type","src","height","size","id","placeholder","onKeyPress","event","key","test","target","value","onZipChange","validate","AppContainer","setResponseData","a","async","fetch","res","json","console","log","App","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","docref","collection","doc","document","getElementById","onclick","localStorage","getItem","set","then","catch","error","get","exists","setItem","data","textContent","handleCityChange","cityName","table","getElementsByClassName","cookie","rows","innerHTML","i","length","row1","insertRow","cell1","insertCell","cell2","index","ReactDOM","render"],"mappings":"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","file":"static/js/main.72fe2143.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction AppHeader() {\r\n\r\n    return <div>\r\n        <p className=\"p-3 text-light h3 bg-primary\">Current weather by city name</p>\r\n    </div>\r\n}\r\n  \r\nexport default AppHeader","import React from 'react';\r\n\r\nfunction CityResponse(props) {\r\n\r\n    if(props.responseData === null || props.responseData === '') {\r\n        return null;\r\n    }\r\n\r\n    if(props.responseData.cod === '400' || props.responseData.cod === '404') {\r\n        setTimeout(function() { props.clearResponse();}, 20000);\r\n        return (\r\n            <div className=\"col-sm-8\">\r\n                <div className=\"text-danger\">{ props.responseData.message }</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if(props.responseData.cod === 200) {\r\n        return (\r\n            <div className=\"col-sm-8\">\r\n                <table class=\"table table-info table-hover\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>City</td>\r\n                            <td>{props.responseData.name}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Temperature</td>\r\n                            <td>{props.responseData.main.temp}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Pressure</td>\r\n                            <td>{props.responseData.main.pressure}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Humidity</td>\r\n                            <td>{props.responseData.main.humidity}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Temperature (Min)</td>\r\n                            <td>{props.responseData.main.temp_min}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Temperature (Max)</td>\r\n                            <td>{props.responseData.main.temp_max}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Conditions</td>\r\n                            <td>{props.responseData.weather[0].description}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n    return null\r\n}\r\n  \r\nexport default CityResponse","import React, { useState } from 'react';\r\n\r\nfunction City(props) {\r\n\r\n    const [validationError, setValidationError] = useState(null);\r\n\r\n    const validate = (event) => {\r\n        const cityCodePattern = /^[a-zA-Z]+$/;\r\n        const valid = cityCodePattern.test(event.target.value);\r\n        if (!valid) {\r\n            setValidationError('* should only contain letters');\r\n            props.clearResponse();\r\n        } else {\r\n            setValidationError('');\r\n            props.onZipChange(event.target.value);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"col-sm-4\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-10\">\r\n                    <style jsx=\"true\">{`\r\n                        .form-control::-webkit-input-placeholder {\r\n                            color: #ddd;\r\n                        }\r\n                    `}\r\n                    </style>\r\n                    <input\r\n                        type=\"text/html\" src=\"Map.html\"  height=\"1000\" size = \"10\"\r\n                        className=\"form-control\"\r\n                        id=\"usr\"\r\n                        placeholder=\"NZ city name\"\r\n                        onKeyPress={(event) => {\r\n                            if (event.key === \"Enter\") {\r\n                                validate(event);\r\n                            }\r\n                        }}\r\n                    ></input>\r\n                </div>\r\n                   \r\n            </div>\r\n            <div className=\"pl-3 row\">\r\n                <div className=\"text-danger small\"> {validationError}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default City\r\n","import React, { useState } from 'react';\r\nimport fetch from 'isomorphic-unfetch'\r\nimport CityResponse from '../components/cityResponse';\r\nimport City from '../components/City';\r\n\r\nfunction AppContainer(props) {\r\n    \r\n    const [responseData, setResponseData] = useState('');\r\n    const handleCityChange = async (value) => {\r\n        //console.log(`--------- fetchData called zip:${zipValue}`)\r\n        const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?appid=6b7b471967dd0851d0010cdecf28f829&units=metric&q=${value},nz`)\r\n        const json = await res.json()\r\n        console.log(json);\r\n        setResponseData(json);\r\n    }\r\n\r\n    const clearResponse = () => {\r\n        setResponseData('');\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col-sm-4\"></div>\r\n                <City onZipChange={handleCityChange} clearResponse={clearResponse}/>\r\n                <div className=\"col-sm-4\"></div>\r\n            </div>\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col-sm-2\"></div>\r\n                <CityResponse responseData={responseData} clearResponse={clearResponse}/>\r\n                <div className=\"col-sm-2\"></div>\r\n            </div>    \r\n        </div>\r\n    );\r\n}\r\n  \r\nexport default AppContainer\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport AppHeader from './components/AppHeader';\r\nimport AppContainer from './containers/AppContainer';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <AppHeader />\r\n      <AppContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDC5hRgGLL5PnDN3ysBNnIGAkAjUIrEIDQ\",\r\n    authDomain: \"assignmment.firebaseapp.com\",\r\n    databaseURL: \"https://assignmment.firebaseio.com\",\r\n    projectId: \"assignmment\",\r\n    storageBucket: \"assignmment.appspot.com\",\r\n    messagingSenderId: \"431154107897\",\r\n    appId: \"1:431154107897:web:17349c3ab382d32cb79928\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nvar firestore = firebase.firestore();\r\nconst docref = firestore.collection(\"locations\").doc(\"cityNames\")\r\nvar element = document.getElementById(\"map\");\r\nelement.onclick = function(){\r\n    if(localStorage.getItem(\"store\")!=null){\r\n        console.log(localStorage.getItem(\"store\"))\r\n        docref.set({\r\n            name: localStorage.getItem(\"store\")\r\n        }).then(function(){\r\n            docref.set({\r\n                name: localStorage.getItem(\"store\")\r\n            })\r\n            console.log(localStorage.getItem(\"store\"))\r\n        }).catch(function(error) {\r\n            console.log(\"error here\", error)\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\ndocref.get().then(function(doc) {\r\n    if(doc && doc.exists) {\r\n        localStorage.setItem(\"data\", doc.data().name);\r\n        console.log(doc.data().name + \" retrieved\");\r\n        //localStorage.setItem(\"store\", doc.data().name)\r\n        document.getElementById(\"city\").textContent = doc.data().name\r\n        handleCityChange(doc.data().name)\r\n    }\r\n    \r\n})\r\n\r\nvar handleCityChange = async (cityName) => {\r\n\r\n\r\n\r\n    const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?appid=6b7b471967dd0851d0010cdecf28f829&units=metric&q=${cityName},nz`)\r\n    const json = await res.json()\r\n    // console.log(json);\r\n\r\n    var table = document.getElementsByClassName(\"table\")[0]\r\n    ///  console.log(table)\r\n    if (json.cod === 200) {\r\n        document.cookie = json.name;\r\n        let rows = [{\r\n            \"name\": \"City\",\r\n            \"index\": json.name\r\n        },\r\n        {\r\n            \"name\": \"Temperature\",\r\n            \"index\": json.main.temp\r\n        },\r\n        {\r\n            \"name\": \"Pressure\",\r\n            \"index\": json.main.pressure\r\n        },\r\n        {\r\n            \"name\": \"Humidity\",\r\n            \"index\": json.main.humidity\r\n        },\r\n        {\r\n            \"name\": \"Min Temperature\",\r\n            \"index\": json.main.temp_min\r\n        },\r\n        {\r\n            \"name\": \"Max Temperature\",\r\n            \"index\": json.main.temp_max\r\n        },\r\n        {\r\n            \"name\": \"Condition\",\r\n            \"index\": json.weather[0].description\r\n        }\r\n        ];\r\n        table.innerHTML = \"\";\r\n        for (var i = 0; i < rows.length; i++) {\r\n            var row1 = table.insertRow();\r\n            var cell1 = row1.insertCell();\r\n            var cell2 = row1.insertCell();\r\n            cell1.innerHTML = rows[i].name;\r\n            cell2.innerHTML = rows[i].index;\r\n        }\r\n    }\r\n    else {\r\n        table.innerHTML = \"\";\r\n        table.innerHTML = json.message;\r\n    }\r\n}\r\n\r\n// Initialize Firebase\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}